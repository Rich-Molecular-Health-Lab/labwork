))
}
) %>% add_title("Rich Lab Budget Summary")
budget.react
budget.react <- reactable(
proj_summary,
fullWidth       = TRUE,
resizable       = TRUE,
groupBy         = "Project",
theme           = fivethirtyeight(font_size = 16),
defaultExpanded = FALSE,
defaultColDef   = colDef(footerStyle = list(fontWeight = "bold")),
columns = list(
Index     = colDef(show = FALSE),
Spent_by  = colDef(name   = "Filled By",
format = colFormat(date = TRUE),
maxWidth = 100),
Project   = colDef(name       = "Project",
align      = "left",
footer     = "Grand Total",
maxWidth = 300,
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return `<strong>${cellInfo.value}</strong>`;
}"),
html = TRUE,
style = cell_style(
data       = proj_summary,
font_size  = 13,
font_color = "#333333"
)
),
Category  = colDef(name     = "Category",
maxWidth = 150),
Subtotal  = colDef(
name      = "Total",
align     = "left",
format    = colFormat(currency = "USD", separators = TRUE),
aggregate = "sum",
aggregated = JS("function(cellInfo) {
return `<strong>${cellInfo.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</strong>`
}"
),
html = TRUE,
footer    = function(values, name) {
total <- sum(values, na.rm = TRUE)
label_currency(prefix = "$", big.mark = ",")(total)
},
cell      = data_bars(
proj_summary,
text_position = "outside-base",
number_fmt    = label_currency(prefix = "$", big.mark = ","),
box_shadow    = TRUE,
round_edges   = TRUE,
fill_color    = paletteer_d("PNWColors::Starfish"),
bias          = 1.5,
icon          = 'dollar-sign',
background    = 'transparent',
bar_height    = 4
),
maxWidth = 300
)
),
details = function(index) {
supplies_budget <- supplies_summary[supplies_summary$Index == proj_summary$Index[index], ]
div(
style = "margin-bottom: 40px;",
reactable(supplies_budget,
fullWidth       = TRUE,
theme           = void(),
defaultExpanded = FALSE,
columns = list(
Index     = colDef(show = FALSE),
Project   = colDef(name = "",  maxWidth = 200),
Category  = colDef(name       = "",
align      = "right",
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return cellInfo.value;
}"),  maxWidth = 200),
Supplies  = colDef(name = "", align = "right",  maxWidth = 200),
Cost      = colDef(name   = "",
align  = "left",
aggregate = "sum",
format    = list(aggregated =
colFormat(currency   = "USD",
separators = TRUE),
cell =  colFormat(currency = "USD",
separators = TRUE))
)
))
}
) %>% add_title("Rich Lab Budget Summary")
budget.react
budget.react <- reactable(
proj_summary,
fullWidth       = TRUE,
resizable       = TRUE,
wrap            = FALSE,
groupBy         = "Project",
theme           = fivethirtyeight(font_size = 16),
defaultExpanded = FALSE,
defaultColDef   = colDef(footerStyle = list(fontWeight = "bold")),
columns = list(
Index     = colDef(show = FALSE),
Spent_by  = colDef(name   = "Filled By",
format = colFormat(date = TRUE),
maxWidth = 100),
Project   = colDef(name       = "Project",
align      = "left",
footer     = "Grand Total",
maxWidth = 300,
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return `<strong>${cellInfo.value}</strong>`;
}"),
html = TRUE,
style = cell_style(
data       = proj_summary,
font_size  = 13,
font_color = "#333333"
)
),
Category  = colDef(name     = "Category",
maxWidth = 150),
Subtotal  = colDef(
name      = "Total",
align     = "left",
format    = colFormat(currency = "USD", separators = TRUE),
aggregate = "sum",
aggregated = JS("function(cellInfo) {
return `<strong>${cellInfo.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</strong>`
}"
),
html = TRUE,
footer    = function(values, name) {
total <- sum(values, na.rm = TRUE)
label_currency(prefix = "$", big.mark = ",")(total)
},
cell      = data_bars(
proj_summary,
text_position = "outside-base",
number_fmt    = label_currency(prefix = "$", big.mark = ","),
box_shadow    = TRUE,
round_edges   = TRUE,
fill_color    = paletteer_d("PNWColors::Starfish"),
bias          = 1.5,
icon          = 'dollar-sign',
background    = 'transparent',
bar_height    = 4
),
maxWidth = 300
)
),
details = function(index) {
supplies_budget <- supplies_summary[supplies_summary$Index == proj_summary$Index[index], ]
div(
style = "margin-bottom: 40px;",
reactable(supplies_budget,
fullWidth       = TRUE,
theme           = void(),
defaultExpanded = FALSE,
columns = list(
Index     = colDef(show = FALSE),
Project   = colDef(name = "",  maxWidth = 200),
Category  = colDef(name       = "",
align      = "right",
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return cellInfo.value;
}"),  maxWidth = 200),
Supplies  = colDef(name = "", align = "right",  maxWidth = 200),
Cost      = colDef(name   = "",
align  = "left",
aggregate = "sum",
format    = list(aggregated =
colFormat(currency   = "USD",
separators = TRUE),
cell =  colFormat(currency = "USD",
separators = TRUE))
)
))
}
) %>% add_title("Rich Lab Budget Summary")
budget_summary <- bind_rows(
loris_microbiomes,
loris_taxonomy,
salci,
bat_microbiome,
bat_eDNA,
equipment,
personnel,
travel.cost) %>%
mutate(spent_by = case_when(
str_detect(Project, "General") & Category == "Personnel" ~ ymd("2026-05-31") ,
str_detect(Project, "General") & Category != "Personnel" ~ ymd("2025-05-31") ,
str_detect(Project, "Mammal Workshop") ~ ymd("2025-12-10") ,
str_detect(Project, "Lithium")         ~ ymd("2026-1-31") ,
str_detect(Project, "eDNA")            ~ ymd("2025-12-31") ,
str_detect(Project, "Bat")             ~ ymd("2025-12-31") ,
str_detect(Project, "Loris Molecular") ~ ymd("2026-2-1") ,
str_detect(Project, "Taxonomy")        ~ ymd("2026-5-1")
)) %>%
mutate(Project  = fct(Project , levels = projects),
Category = fct(Category, levels = categories),
Supplies = fct(Supplies, levels = supplies)) %>%
relocate(all_of(budget_cols)) %>%
relocate(spent_by) %>%
arrange(spent_by, Project, Category, Supplies)  %>%
filter(Project != "Lithium Tolerant Microbial Communities" &
Project != "Urbanization Bat Health"  )
write.table(budget_summary,
here("supplies/RichLab_budget_summary.tsv"),
row.names = FALSE,
sep       = "\t")
download_budget <- download_file(
path           = here("supplies/RichLab_budget_summary.tsv"),
output_name    = "RichLab_budget_summary",
button_label   = "Download TSV Version of Table Below",
button_type    = "danger",
has_icon       = TRUE,
icon           = "fa fa-save",
self_contained = TRUE
)
write.table(budget_summary,
here("supplies/RichLab_budget_summary.tsv"),
row.names = FALSE,
sep       = "\t")
download_budget <- download_file(
path           = here("supplies/RichLab_budget_summary.tsv"),
output_name    = "RichLab_budget_summary",
button_label   = "Download TSV Version",
button_type    = "danger",
has_icon       = TRUE,
icon           = "fa fa-save",
self_contained = TRUE
)
budget.react <- reactable(
proj_summary,
fullWidth       = TRUE,
resizable       = TRUE,
wrap            = FALSE,
groupBy         = "Project",
theme           = fivethirtyeight(font_size = 16),
defaultExpanded = FALSE,
defaultColDef   = colDef(footerStyle = list(fontWeight = "bold")),
columns = list(
Index     = colDef(show = FALSE),
Spent_by  = colDef(name   = "Filled By",
format = colFormat(date = TRUE),
maxWidth = 100),
Project   = colDef(name       = "Project",
align      = "left",
footer     = "Grand Total",
maxWidth = 300,
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return `<strong>${cellInfo.value}</strong>`;
}"),
html = TRUE,
style = cell_style(
data       = proj_summary,
font_size  = 13,
font_color = "#333333"
)
),
Category  = colDef(name     = "Category",
maxWidth = 150),
Subtotal  = colDef(
name      = "Total",
align     = "left",
format    = colFormat(currency = "USD", separators = TRUE),
aggregate = "sum",
aggregated = JS("function(cellInfo) {
return `<strong>${cellInfo.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</strong>`
}"
),
html = TRUE,
footer    = function(values, name) {
total <- sum(values, na.rm = TRUE)
label_currency(prefix = "$", big.mark = ",")(total)
},
cell      = data_bars(
proj_summary,
text_position = "outside-base",
number_fmt    = label_currency(prefix = "$", big.mark = ","),
box_shadow    = TRUE,
round_edges   = TRUE,
fill_color    = paletteer_d("PNWColors::Starfish"),
bias          = 1.5,
icon          = 'dollar-sign',
background    = 'transparent',
bar_height    = 4
),
maxWidth = 300
)
),
details = function(index) {
supplies_budget <- supplies_summary[supplies_summary$Index == proj_summary$Index[index], ]
div(
style = "margin-bottom: 40px;",
reactable(supplies_budget,
fullWidth       = TRUE,
theme           = void(),
defaultExpanded = FALSE,
columns = list(
Index     = colDef(show = FALSE),
Project   = colDef(name = "",  maxWidth = 200),
Category  = colDef(name       = "",
align      = "right",
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return cellInfo.value;
}"),  maxWidth = 200),
Supplies  = colDef(name = "", align = "right",  maxWidth = 200),
Cost      = colDef(name   = "",
align  = "left",
aggregate = "sum",
format    = list(aggregated =
colFormat(currency   = "USD",
separators = TRUE),
cell =  colFormat(currency = "USD",
separators = TRUE))
)
))
}
) %>% add_title("Rich Lab Budget Summary") %>%
add_subtitle(html(download_budget))
budget.react <- reactable(
proj_summary,
fullWidth       = TRUE,
resizable       = TRUE,
wrap            = FALSE,
groupBy         = "Project",
theme           = fivethirtyeight(font_size = 16),
defaultExpanded = FALSE,
defaultColDef   = colDef(footerStyle = list(fontWeight = "bold")),
columns = list(
Index     = colDef(show = FALSE),
Spent_by  = colDef(name   = "Filled By",
format = colFormat(date = TRUE),
maxWidth = 100),
Project   = colDef(name       = "Project",
align      = "left",
footer     = "Grand Total",
maxWidth = 300,
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return `<strong>${cellInfo.value}</strong>`;
}"),
html = TRUE,
style = cell_style(
data       = proj_summary,
font_size  = 13,
font_color = "#333333"
)
),
Category  = colDef(name     = "Category",
maxWidth = 150),
Subtotal  = colDef(
name      = "Total",
align     = "left",
format    = colFormat(currency = "USD", separators = TRUE),
aggregate = "sum",
aggregated = JS("function(cellInfo) {
return `<strong>${cellInfo.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</strong>`
}"
),
html = TRUE,
footer    = function(values, name) {
total <- sum(values, na.rm = TRUE)
label_currency(prefix = "$", big.mark = ",")(total)
},
cell      = data_bars(
proj_summary,
text_position = "outside-base",
number_fmt    = label_currency(prefix = "$", big.mark = ","),
box_shadow    = TRUE,
round_edges   = TRUE,
fill_color    = paletteer_d("PNWColors::Starfish"),
bias          = 1.5,
icon          = 'dollar-sign',
background    = 'transparent',
bar_height    = 4
),
maxWidth = 300
)
),
details = function(index) {
supplies_budget <- supplies_summary[supplies_summary$Index == proj_summary$Index[index], ]
div(
style = "margin-bottom: 40px;",
reactable(supplies_budget,
fullWidth       = TRUE,
theme           = void(),
defaultExpanded = FALSE,
columns = list(
Index     = colDef(show = FALSE),
Project   = colDef(name = "",  maxWidth = 200),
Category  = colDef(name       = "",
align      = "right",
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return cellInfo.value;
}"),  maxWidth = 200),
Supplies  = colDef(name = "", align = "right",  maxWidth = 200),
Cost      = colDef(name   = "",
align  = "left",
aggregate = "sum",
format    = list(aggregated =
colFormat(currency   = "USD",
separators = TRUE),
cell =  colFormat(currency = "USD",
separators = TRUE))
)
))
}
) %>% add_title("Rich Lab Budget Summary") %>%
add_subtitle(reactablefmtr::html(download_budget))
budget.react <- reactable(
proj_summary,
fullWidth       = TRUE,
resizable       = TRUE,
wrap            = FALSE,
groupBy         = "Project",
theme           = fivethirtyeight(font_size = 16),
defaultExpanded = FALSE,
defaultColDef   = colDef(footerStyle = list(fontWeight = "bold")),
columns = list(
Index     = colDef(show = FALSE),
Spent_by  = colDef(name   = "Filled By",
format = colFormat(date = TRUE),
maxWidth = 100),
Project   = colDef(name       = "Project",
align      = "left",
footer     = "Grand Total",
maxWidth = 300,
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return `<strong>${cellInfo.value}</strong>`;
}"),
html = TRUE,
style = cell_style(
data       = proj_summary,
font_size  = 13,
font_color = "#333333"
)
),
Category  = colDef(name     = "Category",
maxWidth = 150),
Subtotal  = colDef(
name      = "Total",
align     = "left",
format    = colFormat(currency = "USD", separators = TRUE),
aggregate = "sum",
aggregated = JS("function(cellInfo) {
return `<strong>${cellInfo.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</strong>`
}"
),
html = TRUE,
footer    = function(values, name) {
total <- sum(values, na.rm = TRUE)
label_currency(prefix = "$", big.mark = ",")(total)
},
cell      = data_bars(
proj_summary,
text_position = "outside-base",
number_fmt    = label_currency(prefix = "$", big.mark = ","),
box_shadow    = TRUE,
round_edges   = TRUE,
fill_color    = paletteer_d("PNWColors::Starfish"),
bias          = 1.5,
icon          = 'dollar-sign',
background    = 'transparent',
bar_height    = 4
),
maxWidth = 300
)
),
details = function(index) {
supplies_budget <- supplies_summary[supplies_summary$Index == proj_summary$Index[index], ]
div(
style = "margin-bottom: 40px;",
reactable(supplies_budget,
fullWidth       = TRUE,
theme           = void(),
defaultExpanded = FALSE,
columns = list(
Index     = colDef(show = FALSE),
Project   = colDef(name = "",  maxWidth = 200),
Category  = colDef(name       = "",
align      = "right",
rowHeader = TRUE,
grouped   = JS("function(cellInfo) {
return cellInfo.value;
}"),  maxWidth = 200),
Supplies  = colDef(name = "", align = "right",  maxWidth = 200),
Cost      = colDef(name   = "",
align  = "left",
aggregate = "sum",
format    = list(aggregated =
colFormat(currency   = "USD",
separators = TRUE),
cell =  colFormat(currency = "USD",
separators = TRUE))
)
))
}
) %>% add_title("Rich Lab Budget Summary") %>%
add_source(tagList(download_budget))
save_reactable_test(budget.react, here("supplies/RichLab_budget_summary.html"))
budget.react
