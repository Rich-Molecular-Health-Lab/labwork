LibraryCode,
LibraryPoolVol_ul) %>%
distinct() %>%
arrange(ExtractID, SequenceID)
extracts.export <- dna.extracts.marmoset %>% left_join(count.libraries) %>%
mutate(n_16s_extract = if_else(is.na(n_16s_extract), 0, n_16s_extract),
n_16s_sample  = if_else(is.na(n_16s_sample) , 0, n_16s_sample)) %>%
select(SampleID,
CollectionDate,
Subj_Certainty,
Subject,
n_16s_extract,
n_16s_sample,
ExtractID,
ExtractDate,
ExtractConc,
ExtractedBy,
ExtractKit,
ExtractBox,
ExtractNotes) %>%
distinct() %>%
arrange(SampleID, ExtractID)
samples.export <- samples.marmoset %>% left_join(count.extracts) %>% left_join(select(count.libraries, c("SampleID", "n_16s_sample"))) %>%
mutate(n_16s_sample   = if_else(is.na(n_16s_sample)   , 0, n_16s_sample),
n_dna_extracts = if_else(is.na(n_dna_extracts) , 0, n_dna_extracts)) %>%
select(SampleID,
SampleCollectedBy,
SampleNotes,
CollectionDate,
Subj_Certainty,
Subject,
n_dna_extracts,
n_16s_sample) %>%
distinct() %>%
arrange(SampleID)
write.table(libraries.export,
paste0(params$local, "data/libraries_marmoset.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(extracts.export,
paste0(params$local, "data/extracts_marmoset.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(samples.export,
paste0(params$local, "data/samples_marmoset.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
runApp()
blank.libraries <- tibble(
LibraryTube       = c(1),
ExtractID         = c("BLANK"),
SequenceID        = c("BLANK"),
LibPrepDate       = c("2024-12-31"),
Pipeline          = c("NONE"),
LibraryBarcode    = c("NONE"),
LibraryFinalConc  = c(0),
LibraryCode       = c("NONE"),
LibraryPoolVol_ul = c(0)
)
blank.extracts <- tibble(
SampleID       = c("BLANK"),
CollectionDate = c("2024-12-31"),
Subj_Certainty = c("BLANK"),
Subject        = c("BLANK"),
n_16s_extract  = c(0),
n_16s_sample   = c(0),
ExtractID      = c("BLANK"),
ExtractDate    = c("2024-12-31"),
ExtractConc    = c(0),
ExtractedBy    = c("BLANK"),
ExtractKit     = c("BLANK"),
ExtractBox     = c("BLANK"),
ExtractNotes   = c("BLANK")
)
blank.samples <- tibble(
SampleID          = c("BLANK"),
SampleCollectedBy = c("BLANK"),
SampleNotes       = c("BLANK"),
CollectionDate    = c("2024-12-31"),
Subj_Certainty    = c("BLANK"),
Subject           = c("BLANK"),
n_dna_extracts    = c(0),
n_16s_sample      = c(0)
)
write.table(blank.libraries,
paste0(params$local, "data/libraries_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.libraries,
paste0(params$local, "data/libraries_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.libraries,
paste0(params$local, "data/libraries_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
runApp()
blank.libraries <- tibble(
LibraryTube       = c(1),
ExtractID         = c("BLANK"),
SequenceID        = c("BLANK"),
LibPrepDate       = c("2024-12-31"),
Pipeline          = c("NONE"),
LibraryBarcode    = c("NONE"),
LibraryFinalConc  = c(0),
LibraryCode       = c("NONE"),
LibraryPoolVol_ul = c(0)
) %>%
mutate(LibPrepDate = ymd(LibPrepDate))
blank.extracts <- tibble(
SampleID       = c("BLANK"),
CollectionDate = c("2024-12-31"),
Subj_Certainty = c("BLANK"),
Subject        = c("BLANK"),
n_16s_extract  = c(0),
n_16s_sample   = c(0),
ExtractID      = c("BLANK"),
ExtractDate    = c("2024-12-31"),
ExtractConc    = c(0),
ExtractedBy    = c("BLANK"),
ExtractKit     = c("BLANK"),
ExtractBox     = c("BLANK"),
ExtractNotes   = c("BLANK")
) %>%
mutate(CollectionDate = ymd(CollectionDate), ExtractDate = ymd(ExtractDate))
blank.samples <- tibble(
SampleID          = c("BLANK"),
SampleCollectedBy = c("BLANK"),
SampleNotes       = c("BLANK"),
CollectionDate    = c("2024-12-31"),
Subj_Certainty    = c("BLANK"),
Subject           = c("BLANK"),
n_dna_extracts    = c(0),
n_16s_sample      = c(0)
) %>%
mutate(CollectionDate = ymd(CollectionDate))
write.table(blank.libraries,
paste0(params$local, "data/libraries_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_envir.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.libraries,
paste0(params$local, "data/libraries_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_bats.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.libraries,
paste0(params$local, "data/libraries_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.extracts,
paste0(params$local, "data/extracts_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
write.table(blank.samples,
paste0(params$local, "data/samples_isolates.tsv"),
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
runApp()
export_libraries <- function(path) {
write.table(blank.libraries,
path,
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
}
export_extracts(path$extracts_isolates)
export_extracts <- function(path) {
write.table(blank.extracts,
path,
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
}
export_libraries <- function(path) {
write.table(blank.libraries,
path,
sep       = "\t",
quote     = FALSE,
row.names = FALSE)
}
blank.libraries <- tibble(
LibraryTube       = c(1),
ExtractID         = c("BLANK"),
SequenceID        = c("BLANK"),
LibPrepDate       = c("2024-12-31"),
Pipeline          = c("NONE"),
LibraryBarcode    = c("NONE"),
LibraryFinalConc  = c(0),
LibraryCode       = c("NONE"),
LibraryPoolVol_ul = c(0)
) %>%
mutate(LibPrepDate = ymd(LibPrepDate))
blank.extracts <- tibble(
SampleID       = c("BLANK"),
CollectionDate = c("2024-12-31"),
Subj_Certainty = c("BLANK"),
Subject        = c("BLANK"),
n_16s_extract  = c(0),
n_16s_sample   = c(0),
ExtractID      = c("BLANK"),
ExtractDate    = c("2024-12-31"),
ExtractConc    = c(0),
ExtractedBy    = c("BLANK"),
ExtractKit     = c("BLANK"),
ExtractBox     = c("BLANK"),
ExtractNotes   = c("BLANK")
) %>%
mutate(CollectionDate = ymd(CollectionDate), ExtractDate = ymd(ExtractDate))
export_extracts(path$extracts_isolates)
export_extracts(path$extracts_bats)
export_extracts(path$extracts_envir)
export_libraries(path$libraries_isolates)
export_libraries(path$libraries_bats)
export_libraries(path$libraries_envir)
extracts_isolates  <- read_extracts(path$extracts_isolates)
View(extracts_isolates)
extracts_bats      <- read_extracts(path$extracts_bats)
extracts_envir     <- read_extracts(path$extracts_envir)
libraries_isolates  <- read_libraries(path$libraries_isolates)
libraries_bats      <- read_libraries(path$libraries_bats)
libraries_envir     <- read_libraries(path$libraries_envir)
View(libraries_bats)
View(libraries_envir)
View(libraries_isolates)
runApp()
libraries_marmoset  <- read_libraries(path$libraries_marmoset)
setwd("~/RStudioMacbook/GitRepos/richlab_main/labwork/LibraryPrep")
?config::get()
source("../GlobalScripts/global.R")
path        <- config::get("libprep")
loris       <- config::get("loris")
bats        <- config::get("bats")
marmoset    <- config::get("marmoset")
isolates    <- config::get("isolates")
envir       <- config::get("envir")
source(paste0(path$inputs))
path        <- config::get("libprep")
setwd("~/RStudioMacbook/GitRepos/richlab_main/labwork/LibraryPrep")
source("../GlobalScripts/global.R")
path        <- config::get("libprep")
loris       <- config::get("loris")
bats        <- config::get("bats")
marmoset    <- config::get("marmoset")
isolates    <- config::get("isolates")
envir       <- config::get("envir")
source(paste0(path$inputs))
path        <- config::get(config = "libprep")
loris       <- config::get(config = "loris")
bats        <- config::get(config = "bats")
marmoset    <- config::get(config = "marmoset")
isolates    <- config::get(config = "isolates")
envir       <- config::get(config = "envir")
source(paste0(path$inputs))
source(paste0(path$steps))
source(paste0(path$helper_functions))
source(paste0(path$inputs))
source(paste0(path$steps))
source(paste0(path$helper_functions))
source(paste0(path$steps))
source(paste0(path$inputs))
source(paste0(path$helper_functions))
extracts <- list(
loris    = tibble(read_extracts(loris$extracts)),
marmoset = tibble(read_extracts(marmoset$extracts)),
isolates = tibble(read_extracts(isolates$extracts)),
bats     = tibble(read_extracts(bats$extracts)),
envir    = tibble(read_extracts(envir$extracts))
)
View(extracts)
libraries <- list(
loris    = tibble(read_libraries(loris$libraries)),
marmoset = tibble(read_libraries(marmoset$libraries)),
isolates = tibble(read_libraries(isolates$libraries)),
bats     = tibble(read_libraries(bats$libraries)),
envir    = tibble(read_libraries(envir$libraries))
)
View(libraries)
test <- extracts$loris
View(test)
shiny::runApp()
path <- config::get(config = params$sampleset)
source(paste0(path$setup))
opts_chunk$set(message = FALSE,
warning = FALSE,
echo    = FALSE,
include = TRUE,
eval    = TRUE)
source(paste0(path$data_functions))
source(paste0(path$inputs))
subject_list <- keep_at(subjects, paste0(params$sampleset)) %>% list_flatten(name_spec = "{inner}")
samples     <- read.csv(path$samples_csv, header = T) %>%
filter(str_starts(SampleID, "\\w+")) %>%
select(-SampleBox)  %>%
mutate(SampleID = str_squish(str_trim(SampleID, "both"))) %>% distinct() %>%
mutate(CollectionDate     = mdy(SampleDate),
Subject            = str_squish(str_trim(SampleSubject)),
.keep = "unused") %>% distinct() %>%
mutate(Subj_Certainty = if_else(Subject %in% subject_list, "yes", "no")) %>%
mutate(Subject        = str_remove_all(Subject, "\\?"))
samples     <- read.csv(path$samples_csv, header = T) %>%
filter(str_starts(SampleID, "\\w+")) %>%
select(-SampleBox)  %>%
mutate(SampleID = str_squish(str_trim(SampleID, "both"))) %>% distinct() %>%
mutate(CollectionDate     = mdy(SampleDate),
Subject            = str_squish(str_trim(SampleSubject)),
.keep = "unused") %>% distinct() %>%
mutate(Subj_Certainty = if_else(Subject %in% subject_list, "yes", "no")) %>%
mutate(Subject        = str_remove_all(Subject, "\\?"))
shiny::runApp()
runApp()
View(extracts)
extracts$samples <- extracts$loris
samples$extracts <- extracts$loris
extracts <- extracts$loris
str(extracts)
View(samplesets)
runApp()
samples <- list(
extracts = list(
loris    = tibble(read_extracts(loris$extracts)),
marmoset = tibble(read_extracts(marmoset$extracts)),
isolates = tibble(read_extracts(isolates$extracts)),
bats     = tibble(read_extracts(bats$extracts)),
envir    = tibble(read_extracts(envir$extracts))
),
libraries = list(
loris    = tibble(read_libraries(loris$libraries)),
marmoset = tibble(read_libraries(marmoset$libraries)),
isolates = tibble(read_libraries(isolates$libraries)),
bats     = tibble(read_libraries(bats$libraries)),
envir    = tibble(read_libraries(envir$libraries))
)
View(samples)
View(read_extracts)
extracts <- list(
loris     = tibble(read_extracts(loris$extracts)),
marmoset  = tibble(read_extracts(marmoset$extracts)),
isolates  = tibble(read_extracts(isolates$extracts)),
bats      = tibble(read_extracts(bats$extracts)),
envir     = tibble(read_extracts(envir$extracts))
)
libraries <- list(
loris     = tibble(read_libraries(loris$libraries)),
marmoset  = tibble(read_libraries(marmoset$libraries)),
isolates  = tibble(read_libraries(isolates$libraries)),
bats      = tibble(read_libraries(bats$libraries)),
envir     = tibble(read_libraries(envir$libraries))
)
sampleset <- list(extracts, libraries)
View(sampleset)
sampleset <- list(extracts = extracts, libraries = libraries)
View(sampleset)
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten(name_spec = "{inner}")
View(test)
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten(name_spec = "{outer}")
View(test)
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten(name_spec = "{outer}")
View(test)
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten()
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten() %>% list_flatten()
test <- sampleset$extracts %>% keep_at("loris") %>% unlist()
test <- sampleset$extracts %>% keep_at("loris") %>% pluck_depth()
test <- sampleset %>% pluck(extracts$loris)
test <- sampleset$extracts %>% pluck(1, loris)
test <- sampleset$extracts %>% pluck(2, "loris")
test <- sampleset$extracts %>% pluck(1, "loris")
test <- sampleset$extracts %>% keep_at("loris") %>% list_flatten()
test <- sampleset$extracts %>% keep("loris") %>% list_flatten()
test <- sampleset$extracts %>% keep_at("loris") %>% list_simplify()
test2 <- sampleset$extracts %>% list_assign(extracts = samples$extracts$loris)
View(test2)
test2 <- sampleset$extracts %>% list_assign(extracts = keep_at(samples$extracts, "loris"))
View(test2)
test2 <- sampleset$extracts %>% list_assign(extracts = samples$extracts$loris)
View(test2)
sampleset <- list(extracts = extracts, libraries = libraries)
test2 <- sampleset$extracts %>% list_assign(extracts = samples$extracts$loris) %>% keep_at("extracts")
View(test2)
test2 <- sampleset$extracts %>% list_assign(extracts = samples$extracts$loris) %>% keep_at("extracts") %>% list_flatten()
View(test2)
test2 <- sampleset$extracts %>% list_assign(extracts = sampleset$extracts$loris) %>% keep_at("extracts")
samples <- list(extracts = extracts$isolates, libraries = libraries$isolates)
samples$extracts <- sampleset$extracts %>% list_assign(extracts = sampleset$extracts$loris) %>% keep_at("extracts")
View(samples)
samples <- list(extracts = extracts$isolates, libraries = libraries$isolates)
samples <- samples %>% list_assign(extracts = sampleset$extracts$loris) %>% keep_at("extracts")
View(samples)
samples <- list(extracts = extracts$isolates, libraries = libraries$isolates)
samples <- samples %>% list_assign(extracts = sampleset$extracts$loris)
View(samples)
runApp()
setwd("~/RStudioMacbook/GitRepos/richlab_main/labwork/LibraryPrep")
runApp()
View(setup_protocol)
View(extracts)
extracts[["loris"]]
View(extracts[["loris"]])
str(extracts$loris)
runApp()
View(rxns_rap16s)
runApp()
?renderReactable
runApp()
?getReactableState
runApp()
shiny::runApp()
runApp()
barcodes.24 <- tibble(
"column" = c(1:12),
"A"      = rep(c("01", "09", "17", "blank"), times = 3),
"B"      = rep(c("02", "10", "18", "blank"), times = 3),
"C"      = rep(c("03", "11", "19", "blank"), times = 3),
"D"      = rep(c("04", "12", "20", "blank"), times = 3),
"E"      = rep(c("05", "13", "21", "blank"), times = 3),
"F"      = rep(c("06", "14", "22", "blank"), times = 3),
"G"      = rep(c("07", "15", "23", "blank"), times = 3),
"H"      = rep(c("08", "16", "24", "blank"), times = 3),
)
barcodes.24_wells <- barcodes.24 %>%
pivot_longer(
cols      = !column,
names_to  = "row",
values_to = "Barcode"
) %>%
mutate(BarcodePos = paste0(row, column)) %>%
select(BarcodePos, Barcode)
View(barcodes.24_wells)
barcodes.24_wells <- barcodes.24 %>%
pivot_longer(
cols      = !column,
names_to  = "row",
values_to = "Barcode"
) %>%
mutate(BarcodePos = paste0(row, column))
View(barcodes.24_wells)
runApp()
?renderPrint
runApp()
?reactiveValuesToList
runApp()
?accordion_panel_insert
runApp()
View(compilation_groups)
runApp()
View(timestamp)
runApp()
?accordion
runApp()
?rows_delete
runApp()
rlang::last_trace()
runApp()
